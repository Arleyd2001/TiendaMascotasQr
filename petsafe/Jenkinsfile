pipeline {
    agent any
    
    environment {
        FIREBASE_API_KEY = credentials('AIzaSyB2B_0uZlrCBRNi0g-_ptS_PDz3vtP_jHU') // Asegúrate de definir esta credencial en Jenkins
    }
    
    stages {
        stage('Test de Conexión a Firebase Firestore') {
            steps {
                script {
                    try {
                        // Instalar herramientas de Firebase globalmente
                        sh "npm install -g firebase-tools"
                        
                        // Autenticación con Firebase utilizando el token API key
                        sh "firebase login:ci --no-localhost --token ${FIREBASE_API_KEY}"
                        
                        // Listar proyectos y colecciones en Firebase Firestore
                        sh "firebase projects:list --token ${FIREBASE_API_KEY}"
                        sh "firebase firestore:list --token ${FIREBASE_API_KEY}"
                    } catch (Exception e) {
                        error "Error al verificar la conexión a Firebase Firestore: ${e.message}"
                    }
                }
            }
        }
        
        stage('Obtener Primeras Tres Mascotas Registradas') {
            steps {
                script {
                    try {
                        // Instalación de dependencias y construcción de la aplicación React
                        sh "npm install"
                        sh "npm run build"
                        
                        // Ejemplo de cómo obtener datos directamente desde Firestore
                        def mascotasData = sh(script: """
                            firebase firestore:run query "Mascotas" --limit 3 --token ${FIREBASE_API_KEY}
                        """, returnStdout: true).trim()
                        
                        echo "Primeras tres mascotas registradas: ${mascotasData}"
                    } catch (Exception e) {
                        error "Error al obtener las primeras tres mascotas: ${e.message}"
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo "Pipeline finalizado."
        }
    }
}
